{"version":3,"sources":["actions.js","services/listing.js","store/reducers/reducer.js","Components/Input/Input.jsx","Components/List/List.js","App.js","store/store.js","index.js"],"names":["ADD_TASK","DO_TASK","SET_INITIAL_STATE","baseUrl","getAll","a","axios","get","response","data","createNew","content","object","task","done","post","console","log","initialState","Input","useState","newTask","setNewTask","dispatch","useDispatch","clickHandler","e","preventDefault","length","type","actionTypes","htmlFor","onChange","target","value","changeHandler","id","onClick","List","tasks","useSelector","state","doTask","map","className","App","useEffect","listings","store","createStore","action","taskToDo","find","splice","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAaA,EAAW,WACXC,EAAU,UACVC,EAAoB,oB,iBCD3BC,EAAU,4BAEHC,EAAM,uCAAG,4BAAAC,EAAA,sEACKC,IAAMC,IAAIJ,GADf,cACZK,EADY,yBAEXA,EAASC,MAFE,2CAAH,qDAKNC,EAAS,uCAAG,WAAOC,GAAP,iBAAAN,EAAA,6DACfO,EAAS,CAAEC,KAAMF,EAASG,MAAM,GADjB,SAEER,IAAMS,KAAKZ,EAASS,GAFtB,cAEfJ,EAFe,OAGrBQ,QAAQC,IAAIT,EAASC,MAHA,kBAIdD,EAASC,MAJK,2CAAH,sDCLlBS,EAAe,G,OCCNC,EAAQ,WAAO,IAAD,EACOC,mBAAS,IADhB,mBAChBC,EADgB,KACPC,EADO,KAGjBC,EAAWC,cAMXC,EAAe,SAACC,GDwBA,IAACf,ECvBnBe,EAAEC,iBACEN,EAAQO,OAAS,GAAGL,GDsBLZ,ECtByBU,EDuBhD,uCAAO,WAAOE,GAAP,eAAAlB,EAAA,sEACmBK,EAAUC,GAD7B,OACGU,EADH,OAEHE,EAAS,CACLM,KAAMC,EACNrB,KAAMY,IAJP,2CAAP,yDCrBA,OACI,iCACI,wBAAOU,QAAQ,QAAf,0DAEI,uBACIC,SAAU,SAACN,GAAD,OAbJ,SAACA,GACnBJ,EAAWI,EAAEO,OAAOC,OAYSC,CAAcT,IAC/BG,KAAK,OACLO,GAAG,aAGX,wBAAQC,QAAS,SAACX,GAAD,OAAOD,EAAaC,IAArC,qBCxBCY,EAAO,WAChB,IAAMf,EAAWC,cAEXe,EAAQC,aAAY,SAACC,GAAD,OAAWA,KAE/BhB,EAAe,SAACC,EAAGU,GACrBV,EAAEC,iBACFJ,EJNc,SAACa,GAAD,MAAS,CAAEP,KAAM5B,EAASmC,GAAIA,GIMnCM,CAAON,KAGpB,OACI,8BACI,6BACKG,EAAMI,KAAI,SAAC9B,GAAD,OACP,oBACIwB,QAAS,SAACX,GAAD,OAAOD,EAAaC,EAAGb,EAAKuB,KAErCA,GAAIvB,EAAKuB,GACTQ,UAAW/B,EAAKC,KAAO,OAAS,GAJpC,SAMKD,EAAKA,MAJDA,EAAKuB,YCEnBS,MAff,WACI,IAAMtB,EAAWC,cAIjB,OAHAsB,qBAAU,WACNvB,EHmBJ,uCAAO,WAAOA,GAAP,eAAAlB,EAAA,sEACoBD,IADpB,OACG2C,EADH,OAEHxB,EAAS,CACLM,KAAMC,EACNrB,KAAMsC,IAJP,2CAAP,yDGlBG,CAACxB,IAEA,qBAAKqB,UAAU,UAAf,SACI,sBAAKA,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,U,eCXHI,EAAQC,aJCE,WAAmC,IAAlCR,EAAiC,uDAAzBvB,EAAcgC,EAAW,uCACrD,OAAQA,EAAOrB,MACX,KAAKC,EACD,OAAOoB,EAAOzC,KAElB,KAAKqB,EACD,MAAM,GAAN,mBAAWW,GAAX,CAAkBS,EAAOzC,OAE7B,KAAKqB,EACD,IAAIqB,EAAWV,EAAMW,MAAK,SAACvC,GAAD,OAAUA,EAAKuB,KAAOc,EAAOd,MAOvD,OANAe,EAASrC,MAAQqC,EAASrC,KAK1B2B,EAAMY,OAAOF,EAASf,GAAK,EAAG,EAAGe,GAC1B,YAAIV,GAGnB,OAAOA,IIpB+Ba,YAAgBC,MCG1DC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRW,SAASC,eAAe,W","file":"static/js/main.23bdb60b.chunk.js","sourcesContent":["export const ADD_TASK = 'ADD_TASK';\nexport const DO_TASK = 'DO_TASK';\nexport const SET_INITIAL_STATE = 'SET_INITIAL_STATE';\n\nexport const doTask = (id) => ({ type: DO_TASK, id: id });\n","import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/api';\n\nexport const getAll = async () => {\n    const response = await axios.get(baseUrl);\n    return response.data;\n};\n\nexport const createNew = async (content) => {\n    const object = { task: content, done: false };\n    const response = await axios.post(baseUrl, object);\n    console.log(response.data);\n    return response.data;\n};\n","import * as actionTypes from '../../actions';\nimport { getAll, createNew } from '../../services/listing';\n\nlet initialState = [];\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_INITIAL_STATE: {\n            return action.data;\n        }\n        case actionTypes.ADD_TASK: {\n            return [...state, action.data];\n        }\n        case actionTypes.DO_TASK: {\n            let taskToDo = state.find((task) => task.id === action.id);\n            taskToDo.done = !taskToDo.done;\n            // axios\n            //     .put(`http://localhost:3001/tasks/${action.id}`, taskToDo)\n            //     .then((resp) => console.log(resp))\n            //     .catch((err) => console.err(err));\n            state.splice(taskToDo.id - 1, 1, taskToDo);\n            return [...state];\n        }\n    }\n    return state;\n};\n\nexport const initializeTasks = () => {\n    return async (dispatch) => {\n        const listings = await getAll();\n        dispatch({\n            type: actionTypes.SET_INITIAL_STATE,\n            data: listings,\n        });\n    };\n};\n\nexport const createTask = (content) => {\n    return async (dispatch) => {\n        const newTask = await createNew(content);\n        dispatch({\n            type: actionTypes.ADD_TASK,\n            data: newTask,\n        });\n    };\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createTask } from '../../store/reducers/reducer';\n\nexport const Input = () => {\n    const [newTask, setNewTask] = useState('');\n\n    const dispatch = useDispatch();\n\n    const changeHandler = (e) => {\n        setNewTask(e.target.value);\n    };\n\n    const clickHandler = (e) => {\n        e.preventDefault();\n        if (newTask.length > 0) dispatch(createTask(newTask));\n    };\n    return (\n        <form>\n            <label htmlFor=\"input\">\n                Your task(should contain at least one symbol)\n                <input\n                    onChange={(e) => changeHandler(e)}\n                    type=\"text\"\n                    id=\"input\"\n                />\n            </label>\n            <button onClick={(e) => clickHandler(e)}>Add</button>\n        </form>\n    );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { doTask } from '../../actions';\nexport const List = () => {\n    const dispatch = useDispatch();\n\n    const tasks = useSelector((state) => state);\n\n    const clickHandler = (e, id) => {\n        e.preventDefault();\n        dispatch(doTask(id));\n    };\n\n    return (\n        <div>\n            <ul>\n                {tasks.map((task) => (\n                    <li\n                        onClick={(e) => clickHandler(e, task.id)}\n                        key={task.id}\n                        id={task.id}\n                        className={task.done ? 'done' : ''}\n                    >\n                        {task.task}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n","import { useEffect } from 'react';\nimport { Input } from './Components/Input/Input';\nimport { List } from './Components/List/List';\nimport { useDispatch } from 'react-redux';\nimport { initializeTasks } from './store/reducers/reducer';\n\nfunction App() {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(initializeTasks());\n    }, [dispatch]);\n    return (\n        <div className=\"wrapper\">\n            <div className=\"app\">\n                <Input />\n                <List />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { applyMiddleware, createStore } from 'redux';\nimport { reducer } from './reducers/reducer';\nimport thunk from 'redux-thunk';\n\nexport const store = createStore(reducer, applyMiddleware(thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}